# Brief plan of the core language tutorial. Expect it to be changed very often while building the site

Articles which do not have title/author (below layout) are considered unfinished.

preparation
	build process
	history ?

operators
	bit operators - theory (logic gates, link numberphile vid) (+DeMorgans law)

references
	lvalue vs rvalue (the simpler form)
	lvalue references
	rvalue references
	
functions
	function pointers

dynamic memory
	brief: RAII

OOP
	nested types

RAII
	copy ctor vs move ctor
	shallow vs deep copying
	STL containers
	std::unique_ptr
	std::shared_ptr
	std::weak_ptr (+circular dependency)
	std::string

operator overloading
?	binary = - move semantics where?
	unary -> ->*
	unary []
	N-ary ()
	new / delete
	SO: how to set and clear each bit

inheritance
	public / protected / private inheritance
	delegating construction to parents
	derived, inherited functions
	shadowing inherited functions
	inherited overloads (+usings)
	multiple inheritance
	virtual inheritance

polymorphism
	virtual assignment
	early binding vs late binding
	virtual base classes
	dynamic_cast vs static_cast
	RTTI

lambda expressions
	intro: higher order functions
	leading vs trailing return type
	catch by value/reference
	mutable lambdas
	generic lambdas
	constexpr lambdas
	templated lambdas

exceptions
	uncaught exceptions

miscellaneous
	alignas, alignof
	volatile
	attributes
	contracts
	asm
	decltype
	future directions (concurrency, modules)

missing
	auto - needs to be explained before classes
	term: user-defined
	implcit convertions - mention +!!""
	converting constructors
	overloading the assignment operator
	more OO syntax examples (something like (A() + B()).func().f2())
	static virtual
	static_assert
	Object relationships
	Container classes
	std::initializer_list
	header/source separation
	"\n" after every output line
	delete this
	nested classes, anonymous classes/namespaces
	access specifiers apply to names only (aliases example)
	vector, vector of references
	function pointers, void pointers and member pointers are not compatible
	multiple inheritance - multiple vtable pointers
	rule of 3/5/0
	bitmask operations
	preincrement/postincrement - functions (they are in operator overloading - too late)
	pointer trap: *i++ (order of operators)
	char* non_const_ptr = "text"
	http://www.open-std.org/jtc1/sc22/wg21/
	cout/cin/getline tutorial
	

cheatsheet - operator overloading
	- syntax example - notes (specific return, losing short-circuit)
cheatsheet - linkage + storage duration

inheritance should be after smart pointers + data structures - reason - examples, need vector and string

	out parameters should be last, avoid pointers

traps
	default arguments in virtual functions
	rvalue to lvalue reference

articles
	C pitfals
		null-terminated strings
		errno
		qsort()
		(void)
		default int
		macro solutions (keywords, complex type exception)
		rand() and srand()'s global state
		syntax (cdecl)
		no const
		implicit declarations
	"C/C++"
		
learncpp problems
	NULL
	*/& alignment
	const-qualified member function, really everywhere
	14.3 - sqrt from cmath
	14.5 - "deriving your class from std::exception" - example does not compile (const issues)
	teachers: forbidding std
	teachers: forbidding "not yet learned" features
	
terms misuse
	C being low level
	C++ being OOP
	Java being native for Android

pygments test
	// text \
	this text is also a part of the comment
	
	/* text1 /* text2 */ text3 */ (multi-lien commens can not be nested)
	
	`x   +y` (cuts spaces)
